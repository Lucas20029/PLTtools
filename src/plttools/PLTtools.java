/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package plttools;

import java.awt.event.ItemEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileFilter;
import plttools.GUI.PenObject;

/**
 *
 * @author Vláďa
 */
public class PLTtools extends javax.swing.JFrame implements PropertyChangeListener {

    PLTfile pltFile = new PLTfile();
    SettingsData settings = new SettingsData();
    ExecutorService executorService;
    
    /**
     * Creates new form PLTtools
     */
    public PLTtools(String args[]) {
        initComponents();
        jFileChooser1.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File pathname) {
                return pathname.isDirectory() || pathname.getName().toLowerCase().endsWith(".plt");
            }

            @Override
            public String getDescription() {
                return "*.plt (Hewlett-Packard Graphics Language plot file)";
            }
            
        });   
        pltFile.addPropertyChangeListener(PLTtools.this);
        pltFile.setSettings(settings);
        pLTpanel1.setPlt(pltFile);
        executorService = Executors.newSingleThreadExecutor();
        if (args.length > 0) {
            File f = new File(args[0]);
            if (f.exists()) {
                readFromFile(f);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jFileChooser1 = new javax.swing.JFileChooser();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        pLTpanel1 = new plttools.GUI.PLTpanel();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jToolBar1 = new javax.swing.JToolBar();
        loadButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        panModeButton = new javax.swing.JButton();
        selectModeButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        antCountSpinner = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        moveToOriginCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        offsetXSpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        offsetYSpinner = new javax.swing.JSpinner();
        mergeIdenticCheckBox = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        thresholdTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        angleTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        debugLineTextField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        alghoritmComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        optimizeButton = new javax.swing.JButton();

        jFileChooser1.setPreferredSize(new java.awt.Dimension(600, 600));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PLT tools");

        jSplitPane1.setDividerSize(15);
        jSplitPane1.setResizeWeight(1.0);
        jSplitPane1.setOneTouchExpandable(true);

        pLTpanel1.setBackground(new java.awt.Color(231, 231, 231));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBox3, org.jdesktop.beansbinding.ELProperty.create("${selected}"), pLTpanel1, org.jdesktop.beansbinding.BeanProperty.create("drawDebug"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBox1, org.jdesktop.beansbinding.ELProperty.create("${selected}"), pLTpanel1, org.jdesktop.beansbinding.BeanProperty.create("kreslitPrejezdy"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBox2, org.jdesktop.beansbinding.ELProperty.create("${selected}"), pLTpanel1, org.jdesktop.beansbinding.BeanProperty.create("kreslitStatus"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout pLTpanel1Layout = new javax.swing.GroupLayout(pLTpanel1);
        pLTpanel1.setLayout(pLTpanel1Layout);
        pLTpanel1Layout.setHorizontalGroup(
            pLTpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 782, Short.MAX_VALUE)
        );
        pLTpanel1Layout.setVerticalGroup(
            pLTpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
        );

        jLabel1.setText("PLT info:");

        jProgressBar1.setString("Ready");
        jProgressBar1.setStringPainted(true);

        jToolBar1.setRollover(true);

        loadButton.setText("Load PLT file");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(loadButton);

        saveButton.setText("Save *.PLT");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(saveButton);
        jToolBar1.add(jSeparator1);

        panModeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plttools/GUI/icons/panMode.png"))); // NOI18N
        panModeButton.setToolTipText("Pan");
        panModeButton.setFocusable(false);
        panModeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panModeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        panModeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panModeButtonMouseClicked(evt);
            }
        });
        jToolBar1.add(panModeButton);

        selectModeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plttools/GUI/icons/selectMode.png"))); // NOI18N
        selectModeButton.setToolTipText("Select");
        selectModeButton.setFocusable(false);
        selectModeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        selectModeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        selectModeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectModeButtonMouseClicked(evt);
            }
        });
        jToolBar1.add(selectModeButton);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pLTpanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pLTpanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Settings"));

        jCheckBox1.setText("travels");

        jCheckBox2.setText("status");

        jCheckBox3.setText("debug info");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Optimizer Settings"));
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel8.setText("No settings for greedy algorithm");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Greedy", jPanel4);

        jLabel9.setText("No settings for modified greedy algorithm");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Modified Greedy", jPanel8);

        jLabel2.setText("Ants count");

        antCountSpinner.setValue(10);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(antCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(201, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(antCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(186, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ant Colony", jPanel5);

        moveToOriginCheckBox.setSelected(true);
        moveToOriginCheckBox.setText("move left bottom corner to origin");

        jLabel3.setText("distance of left bottom corner from origin");

        jLabel4.setText("X:");

        offsetXSpinner.setValue(2);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, moveToOriginCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), offsetXSpinner, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel5.setText("Y:");

        offsetYSpinner.setValue(2);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, moveToOriginCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), offsetYSpinner, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        mergeIdenticCheckBox.setSelected(true);
        mergeIdenticCheckBox.setText("merge identic lines");

        jLabel6.setText("Threshold");

        thresholdTextField.setText("0.2");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mergeIdenticCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), thresholdTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel7.setText("mm");

        jLabel11.setText("Limit angle");

        jLabel12.setText("Debug line");

        angleTextField.setText("10");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mergeIdenticCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), angleTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel13.setText("degrees");

        debugLineTextField.setText("55");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mergeIdenticCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), debugLineTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(offsetXSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(offsetYSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mergeIdenticCheckBox)
                    .addComponent(moveToOriginCheckBox)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(debugLineTextField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(angleTextField)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel13))))
                .addGap(100, 100, 100))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moveToOriginCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(offsetXSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(offsetYSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(mergeIdenticCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(angleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(debugLineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Corrector", jPanel6);

        jTabbedPane1.setSelectedIndex(3);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Optimizer, that will be used"));

        alghoritmComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Greedy", "Modified Greedy", "Ant Colony", "Corrector" }));
        alghoritmComboBox.setSelectedIndex(3);
        alghoritmComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                alghoritmComboBoxItemStateChanged(evt);
            }
        });

        jLabel10.setText("Pens to be processed");

        optimizeButton.setText("Optimize");
        optimizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optimizeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optimizeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(alghoritmComboBox, 0, 365, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, 0, 168, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(alghoritmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(optimizeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        File d = new File("/data/inova/PLTtools/testovaci_stitky");
        jFileChooser1.setCurrentDirectory(d);
//        jFileChooser1.setCurrentDirectory(pltFile.getFile());
        int result = jFileChooser1.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            readFromFile(jFileChooser1.getSelectedFile());
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void optimizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optimizeButtonActionPerformed
        long heapFreeSize = Runtime.getRuntime().maxMemory();
        //JOptionPane.showMessageDialog(null, "K dispozici " + (heapFreeSize /1024 / 1024) + "MB; potřeba "+(pltFile.getRequiredMemory()/1024 / 1024) + "MB", "Množství paměti", JOptionPane.INFORMATION_MESSAGE);
        System.out.print("maxMemory = " + (Runtime.getRuntime().maxMemory() / 1024 / 1024)
                       + "; freeMemory = "+ (Runtime.getRuntime().freeMemory() / 1024 / 1024)
                       + "; totalMemory = " + (Runtime.getRuntime().totalMemory() / 1024 / 1024)
                       + "; required = " + (pltFile.getRequiredMemory(alghoritmComboBox.getSelectedIndex()) / 1024 / 1024));
        if (heapFreeSize < pltFile.getRequiredMemory(alghoritmComboBox.getSelectedIndex())) {
            int result = JOptionPane.showConfirmDialog(null, "Insufficient memory for optimization. Available is " + (heapFreeSize /1024 / 1024) + "MB; but required "+(pltFile.getRequiredMemory(alghoritmComboBox.getSelectedIndex())/1024 / 1024) + "MB;\nRestart the application with enough amount of memory?", "Insufficient memory", JOptionPane.ERROR_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                try {
                    final String javaBin = System.getProperty("java.home") + File.separator + "bin" + File.separator + "java";
                    System.out.println("javaBin = " +javaBin);
                    final File currentJar = new File(PLTtools.class.getProtectionDomain().getCodeSource().getLocation().toURI());
                    System.out.println("currentJar = " + currentJar);                    

                    /* Build command: java -jar application.jar */
                    final ArrayList<String> command = new ArrayList<String>();
                    command.add(javaBin);
                    int newMemory = Math.round(2f*pltFile.getRequiredMemory(alghoritmComboBox.getSelectedIndex())/1024/1024);
                    command.add("-Xmx"+newMemory+"m");
                    if(currentJar.getName().endsWith(".jar")) {
                        command.add("-jar");
                        //command.add(currentJar.getPath());
                        command.add("PLTtools.jar");
                    } else {
                        //command.add("-Duser.dir=\""+currentJar.getPath()+"\"");
                        command.add("-Duser.dir=\"build" + File.separator + "classes\"");
                        command.add("plttools.PLTtools");
                    }
                    command.add(jFileChooser1.getSelectedFile().getPath());
                    System.out.println(command);
                    final ProcessBuilder builder = new ProcessBuilder(command);
                    builder.start();
                    System.exit(0);
                } catch (IOException ex) {
                    Logger.getLogger(PLTtools.class.getName()).log(Level.SEVERE, null, ex);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(PLTfile.class.getName()).log(Level.SEVERE, null, ex);
                }                
            }                
        }
        
        if (pltFile != null) {
            settings.setAntCount((Integer) antCountSpinner.getValue());
            settings.setCorrectorMergeIdentic(mergeIdenticCheckBox.isSelected());
            settings.setCorrectorTolerance(Float.valueOf(thresholdTextField.getText()));
            settings.setCorrectorMoveToOrigin(moveToOriginCheckBox.isSelected());
            settings.setCorrectorOffsetX((Integer) offsetXSpinner.getValue());
            settings.setCorrectorOffsetY((Integer) offsetYSpinner.getValue());
            settings.setCorrectorLimitAngle(Float.valueOf(angleTextField.getText()));
            settings.setCorrectorDebugLine(Integer.valueOf(debugLineTextField.getText()));
            
            SwingWorker sw = new SwingWorker<Void, Void>() {

                @Override
                protected Void doInBackground() throws Exception {
                    try {
                        pltFile.optimizePLT(alghoritmComboBox.getSelectedIndex(),((PenObject) jComboBox1.getSelectedItem()).getNum());
                    } catch (OutOfMemoryError e) {
                        JOptionPane.showMessageDialog(null, "Insufficient memory to perform optimization, the optimization did not run.", "Insufficient memory", JOptionPane.ERROR_MESSAGE);
                    }
                    return null;
                }

                @Override
                protected void done() {
                    if (pltFile.getOptimizedPLT() != null) {
                        PLTdata pltData[] = pltFile.getOptimizedPLT();
                        pltFile.setPltData(pltData);
                        pLTpanel1.setPlt(pltFile);            
                        displayPLTStats();
                    }
                }};      
            executorService.submit(sw);
        }
    }//GEN-LAST:event_optimizeButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        jFileChooser1.setCurrentDirectory(pltFile.getFile());
        int result = jFileChooser1.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            pltFile.saveToFile(jFileChooser1.getSelectedFile());
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void alghoritmComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_alghoritmComboBoxItemStateChanged
//        System.out.println("ItemEvent = " + evt);
        if ((evt.getStateChange() == ItemEvent.SELECTED) && (jTabbedPane1.getTabCount() > alghoritmComboBox.getSelectedIndex())) {
//            System.out.println("select tab #" + alghoritmComboBox.getSelectedIndex());
            jTabbedPane1.setSelectedIndex(alghoritmComboBox.getSelectedIndex());
        }
    }//GEN-LAST:event_alghoritmComboBoxItemStateChanged

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (alghoritmComboBox.getItemCount() > jTabbedPane1.getSelectedIndex()) {
//            System.out.println("select option #" + jTabbedPane1.getSelectedIndex());
            alghoritmComboBox.setSelectedIndex(jTabbedPane1.getSelectedIndex());
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void panModeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panModeButtonMouseClicked
        pLTpanel1.setPanMode();
        panModeButton.setBorder(BorderFactory.createLoweredBevelBorder());
        selectModeButton.setBorder(BorderFactory.createRaisedBevelBorder());
    }//GEN-LAST:event_panModeButtonMouseClicked

    private void selectModeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectModeButtonMouseClicked
        pLTpanel1.setSelectMode();
        selectModeButton.setBorder(BorderFactory.createLoweredBevelBorder());
        panModeButton.setBorder(BorderFactory.createRaisedBevelBorder());
    }//GEN-LAST:event_selectModeButtonMouseClicked

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("fileRead")) {
            System.out.println("reader: file read");
            pLTpanel1.setPlt(pltFile);   
            fillComboBoxWithPens();
            displayPLTStats();
        } else if (evt.getPropertyName().equals("progressValue")) {
            jProgressBar1.setValue((Integer) evt.getNewValue());
        } else if (evt.getPropertyName().equals("progressMessage")) {
            jProgressBar1.setString((String) evt.getNewValue());
        } else if (evt.getPropertyName().equals("progressFinished")) {
            jProgressBar1.setValue(0);
            jProgressBar1.setString("Ready");
            displayPLTStats();
        }
    }

    private void displayPLTStats() {
        DecimalFormat format = new DecimalFormat("######");
        float pltScale = 400;
        String linesLength = format.format(pltFile.getLinesLength()/pltScale);
        String travelsLength = format.format(pltFile.getTravelsLength()/pltScale);
        jLabel1.setText("PLT info: lines " + pltFile.getLinesCount() + " (length " + linesLength + " mm); travels " + pltFile.getTravelsCount() + " (length " + travelsLength + " mm)");        
    }
    
    private void fillComboBoxWithPens() {
        jComboBox1.removeAllItems();
        jComboBox1.addItem(new PenObject(-1));
        for (PLTdata p: pltFile.getPltData()) {
            jComboBox1.addItem(new PenObject(p.getPen()));
        }        
    }

    public final void readFromFile(final File f) {
        setTitle(f.getName()+" - PLT tools");
        SwingWorker sw = new SwingWorker<Void, Void>() {

            @Override
            protected Void doInBackground() throws Exception {
                pltFile.readPLTfromFile(f);
                return null;
            }

        };
        executorService.submit(sw);            
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PLTtools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PLTtools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PLTtools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PLTtools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new PLTtools(args).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox alghoritmComboBox;
    private javax.swing.JTextField angleTextField;
    private javax.swing.JSpinner antCountSpinner;
    private javax.swing.JTextField debugLineTextField;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton loadButton;
    private javax.swing.JCheckBox mergeIdenticCheckBox;
    private javax.swing.JCheckBox moveToOriginCheckBox;
    private javax.swing.JSpinner offsetXSpinner;
    private javax.swing.JSpinner offsetYSpinner;
    private javax.swing.JButton optimizeButton;
    private plttools.GUI.PLTpanel pLTpanel1;
    private javax.swing.JButton panModeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton selectModeButton;
    private javax.swing.JTextField thresholdTextField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
